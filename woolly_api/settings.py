"""
Django settings for woolly_api project.

Generated by 'django-admin startproject' using Django 1.11.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
from woolly_api import settings_confidential as confidentials

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# --------------------------------------------------------------------------
# 		Services Configuration
# --------------------------------------------------------------------------

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = confidentials.SECRET_KEY
JWT_SECRET_KEY = confidentials.JWT_SECRET_KEY
JWT_TTL = 3600

# Payutc & Ginger config
PAYUTC_KEY = confidentials.PAYUTC_KEY
PAYUTC_TRANSACTION_BASE_URL = 'https://payutc.nemopay.net/validation?tra_id='
GINGER_KEY = confidentials.GINGER_KEY
GINGER_SERVER_URL = 'https://assos.utc.fr/ginger/v1/'

# Portail des Assos config
OAUTH = {
	'portal': {
		'client_id': 		confidentials.PORTAL['id'],
		'client_secret': 	confidentials.PORTAL['key'],
		'redirect_uri': 	confidentials.PORTAL['callback'],
		'base_url': 		'https://portail-assos.alwaysdata.net/api/v1/',
		'authorize_url': 	'https://portail-assos.alwaysdata.net/oauth/authorize',
		'access_token_url': 'https://portail-assos.alwaysdata.net/oauth/token',
		'login_url': 		'https://portail-assos.alwaysdata.net/login',
		'logout_url': 		'https://portail-assos.alwaysdata.net/logout',
		'scope': 			'user-get-info user-get-roles user-get-assos-joined-now'
	}
}

# --------------------------------------------------------------------------
# 		Cors & Debug
# --------------------------------------------------------------------------

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = confidentials.DEBUG
ALLOWED_HOSTS = confidentials.ALLOWED_HOSTS

# CSRF_COOKIE_SECURE = True
# SECURE_BROWSER_XSS_FILTER = True
# SECURE_SSL_REDIRECT = True

SESSION_COOKIE_SECURE = confidentials.HTTPS_ENABLED
SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'

# CORS headers config
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_METHODS = (
	'GET',
	'POST',
	'PUT',
	'PATCH',
	'OPTIONS',
	'DELETE',
)

# necessary in addition to the whitelist for protected requests
CORS_ALLOW_CREDENTIALS = True
CSRF_COOKIE_HTTPONLY = True  # Useful ??
CSRF_USE_SESSIONS = False  # Useful ??
CSRF_TRUSTED_ORIGINS = confidentials.ALLOWED_HOSTS


# --------------------------------------------------------------------------
# 		Django REST Configuration
# --------------------------------------------------------------------------

REST_FRAMEWORK = {
	'DEFAULT_AUTHENTICATION_CLASSES': (
		'rest_framework.authentication.SessionAuthentication',
		'authentication.auth.JWTAuthentication'
	),
	'DEFAULT_PAGINATION_CLASS': 'rest_framework_json_api.pagination.PageNumberPagination',
	'PAGE_SIZE': 10,
	'DEFAULT_PARSER_CLASSES': (
		'rest_framework_json_api.parsers.JSONParser',
		'rest_framework.parsers.FormParser',
		'rest_framework.parsers.MultiPartParser'
	),
	'DEFAULT_RENDERER_CLASSES': (
		'rest_framework.renderers.BrowsableAPIRenderer',
		'rest_framework_json_api.renderers.JSONRenderer',
	),
	'DEFAULT_METADATA_CLASS': 'rest_framework_json_api.metadata.JSONAPIMetadata',
	'EXCEPTION_HANDLER': 'rest_framework_json_api.exceptions.exception_handler',
}

VIEWSET = {
	'list': {
		# 'get': 'list',				# "Protection" avant les permissions
		'post': 'create'
	},
	'list_safe': {
		'get': 'list',
		'post': 'create'
	},
	'detail': {
		'get': 'retrieve',
		'put': 'update',
		'patch': 'partial_update',
		# 'delete': 'destroy'
	}
}

# --------------------------------------------------------------------------
# 		Django Configuration
# --------------------------------------------------------------------------

# Database : https://docs.djangoproject.com/en/1.11/ref/settings/#databases
DATABASES = {
	'default': confidentials.DATABASE,
	'sqlite': {
		'ENGINE': 'django.db.backends.sqlite3',
		'NAME': 'db',
	}
}

INSTALLED_APPS = [
	# Django
	'django.contrib.sessions',
	'django.contrib.staticfiles',
	'django.contrib.admin',
	'django.contrib.auth',
	'django.contrib.contenttypes',
	'django.contrib.messages',
	# Django REST
	'rest_framework',
	'corsheaders',
	# Woolly
	'core',
	'authentication',
	'sales',
	'payment',
]

MIDDLEWARE = [
	'django.contrib.sessions.middleware.SessionMiddleware',
	'django.middleware.security.SecurityMiddleware',
	'corsheaders.middleware.CorsMiddleware',
	'django.middleware.common.CommonMiddleware',
	'django.middleware.clickjacking.XFrameOptionsMiddleware',
	'django.middleware.csrf.CsrfViewMiddleware',
	'django.contrib.auth.middleware.AuthenticationMiddleware',
	'django.contrib.messages.middleware.MessageMiddleware',
]

# Authentication
AUTH_USER_MODEL = 'authentication.User'

# To access web admin panel
AUTHENTICATION_BACKENDS = (
	'authentication.auth.AdminSiteBackend',
)

# Password validation : https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
	{'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', },
	{'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', },
	{'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', },
	{'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', },
]

# Paths
BASE_DIR = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))
def ABS_DIR(rel):
	return os.path.join(BASE_DIR, rel.replace('/', os.path.sep))

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR + '/static/'
STATICFILES_DIRS = (
	BASE_DIR + '/assets/',
)
ROOT_URLCONF = 'woolly_api.urls'
WSGI_APPLICATION = 'woolly_api.wsgi.application'


TEMPLATES = [
	{
		'BACKEND': 'django.template.backends.django.DjangoTemplates',
		'DIRS': [
			BASE_DIR + '/templates/'
		],
		'APP_DIRS': True,
		'OPTIONS': {
			'context_processors': [
				'django.contrib.auth.context_processors.auth',
				'django.contrib.messages.context_processors.messages',
				'django.template.context_processors.debug',
				'django.template.context_processors.request',
			],
		},
	},
]

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/
USE_I18N = True
USE_L10N = True
USE_TZ = True
LANGUAGE_CODE = 'fr'
TIME_ZONE = 'Europe/Paris'
